<?xml version="1.0" encoding="utf-8" ?>
<ClarityCodeAid>
	<Texture>
		public static void SetTextureCode(this Clarity.Engine.Element.ClarityObject obj, ETextureCode etex, int slot = 0)
        {
            obj.SetTextureID(slot, (int)etex);
        }
	</Texture>
	<Vertex>
		public static void SetVertexCode(this Clarity.Engine.Element.ClarityObject obj, EVertexCode evc)
        {
            obj.VertexID = (int)evc;
        }
	</Vertex>
	<Shader>
		public static void SetShaderCode(this Clarity.Engine.Element.ClarityObject obj, EShaderCode esh)
        {
            obj.ShaderID = (int)esh;
        }
	</Shader>
	<Sound>
	</Sound>
	<ImageMerge>
	</ImageMerge>
	<TextureAnime>
        public static void SetTextureAnimeCode(this Clarity.Engine.Element.ClarityObject obj, ETextureAnimeCode eta)
        {
            obj.TextureAnimeID = (int)eta;
        }
	</TextureAnime>
	<Structure>
		public static void AddElement(EStructureCode id, Clarity.BaseElement data)
		{
			Clarity.Engine.ClarityEngine.AddManage((long)id, data);
		}
	</Structure>
	<ClaritySetting>
        public static bool GetBool(this Clarity.ClaritySetting cs, ESettingCode code)
        {
            return cs.GetBool((int)code);
        }

        public static int GetInteger(this Clarity.ClaritySetting cs, ESettingCode code)
        {
            return cs.GetInteger((int)code);
        }

        public static float GetFloat(this Clarity.ClaritySetting cs, ESettingCode code)
        {
            return cs.GetFloat((int)code);
        }

        public static string GetString(this Clarity.ClaritySetting cs, ESettingCode code)
        {
            return cs.GetString((int)code);
        }

        public static System.Numerics.Vector2 GetVec2(this Clarity.ClaritySetting cs, ESettingCode code)
        {
            return cs.GetVec2((int)code);
        }

        public static System.Numerics.Vector3 GetVec3(this Clarity.ClaritySetting cs, ESettingCode code)
        {
            return cs.GetVec3((int)code);
        }
                
        public static int[] GetIntegerArray(this Clarity.ClaritySetting cs, ESettingCode code)
        {
            return cs.GetIntegerArray((int)code);
        }

        public static float[] GetFloatArray(this Clarity.ClaritySetting cs, ESettingCode code)
        {
            return cs.GetFloatArray((int)code);
        }

        public static string[] GetStringArray(this Clarity.ClaritySetting cs, ESettingCode code)
        {
            return cs.GetStringArray((int)code);
        }

        public static System.Numerics.Vector2[] GetVec2Array(this Clarity.ClaritySetting cs, ESettingCode code)
        {
            return cs.GetVec2Array((int)code);
        }

        public static System.Numerics.Vector3[] GetVec3Array(this Clarity.ClaritySetting cs, ESettingCode code)
        {
            return cs.GetVec3Array((int)code);
        }

        public static T GetEnum&lt;T&gt;(this Clarity.ClaritySetting cs, ESettingCode code) where T : System.Enum
        {
            string m = cs.GetString(code);
            T ans = (T)System.Enum.Parse(typeof(T), m);
            return ans;
        }
	</ClaritySetting>
    <InitialParam>
        public static Clarity.ClaritySettingData GetSettingData(this Clarity.Engine.ClarityInitialParameter data, EInitialParameterCode code)
		{
			return data.GetSettingData((int)code);
		}

        public static System.Collections.Generic.List&lt;T&gt; GetData&lt;T&gt;(this Clarity.Engine.ClarityInitialParameter data, EInitialParameterCode code, string tag)
        {
            return data.GetData&lt;T&gt;((int)code, tag);
        }

        public static T GetDataFirst&lt;T&gt;(this Clarity.Engine.ClarityInitialParameter data, EInitialParameterCode code, string tag, T def)
        {
            return data.GetDataFirst&lt;T&gt;((int)code, tag, def);
        }
        public static T GetDataEnum&lt;T&gt;(this Clarity.Engine.ClarityInitialParameter data, EInitialParameterCode code, string tag, T def) where T : System.Enum
        {
            return data.GetDataEnum&lt;T&gt;((int)code, tag, def);
        }
    </InitialParam>
</ClarityCodeAid>
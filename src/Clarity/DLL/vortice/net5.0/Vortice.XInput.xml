<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Vortice.XInput</name>
    </assembly>
    <members>
        <member name="T:Vortice.XInput.BatteryDeviceType">
            <summary>
            Retrieves the battery type and charge status of a wireless controller.
            </summary>
        </member>
        <member name="F:Vortice.XInput.BatteryDeviceType.Gamepad">
            <summary>
            Index of the signed-in gamer associated with the device. 
            Can be a value in the range 0-4 ? 1.
            </summary>
        </member>
        <member name="F:Vortice.XInput.BatteryDeviceType.Headset">
            <summary>
            Specifies which device associated with this user index should be queried. Must be <strong>BATTERY_DEVTYPE_GAMEPAD</strong> or <strong>BATTERY_DEVTYPE_HEADSET</strong>.
            </summary>
        </member>
        <member name="T:Vortice.XInput.BatteryInformation">
            <summary>
            Contains information on battery type and charge state.
            </summary>
        </member>
        <member name="F:Vortice.XInput.BatteryInformation.BatteryType">
            <summary>
            The type of battery.
            </summary>
        </member>
        <member name="F:Vortice.XInput.BatteryInformation.BatteryLevel">
            <summary>
            The charge state of the battery.
            </summary>
        </member>
        <member name="T:Vortice.XInput.BatteryLevel">
            <summary>
            Describes The charge state of the battery.
            </summary>
        </member>
        <member name="T:Vortice.XInput.BatteryType">
            <summary>
            Describes the battery type.
            </summary>
        </member>
        <member name="F:Vortice.XInput.BatteryType.Disconnected">
            <summary>
            The device is not connected. 
            </summary>
        </member>
        <member name="F:Vortice.XInput.BatteryType.Wired">
            <summary>
            The device is a wired device and does not have a battery. 
            </summary>
        </member>
        <member name="F:Vortice.XInput.BatteryType.Alkaline">
            <summary>
            The device has an alkaline battery. 
            </summary>
        </member>
        <member name="F:Vortice.XInput.BatteryType.Nimh">
            <summary>
            The device has a nickel metal hydride battery. 
            </summary>
        </member>
        <member name="F:Vortice.XInput.BatteryType.Unknown">
            <summary>
            The device has an unknown battery type. 
            </summary>
        </member>
        <member name="T:Vortice.XInput.Capabilities">
            <summary>
            Describes the capabilities of a connected controller. 
            </summary>
        </member>
        <member name="F:Vortice.XInput.Capabilities.Type">
            <summary>
            Controller type. It must be one of the <see cref="T:Vortice.XInput.DeviceType"/> values.
            </summary>
        </member>
        <member name="F:Vortice.XInput.Capabilities.SubType">
            <summary>
            Subtype of the game controller. See <see cref="T:Vortice.XInput.DeviceSubType"/> for a list of allowed subtypes.
            </summary>
        </member>
        <member name="F:Vortice.XInput.Capabilities.Flags">
            <summary>
            Features of the controller.
            </summary>
        </member>
        <member name="F:Vortice.XInput.Capabilities.Gamepad">
            <summary>
            <see cref="T:Vortice.XInput.Gamepad"/> value that describes available controller features and control resolutions.
            </summary>
        </member>
        <member name="F:Vortice.XInput.Capabilities.Vibration">
            <summary>
            <see cref="T:Vortice.XInput.Vibration"/> value that describes available vibration functionality and resolutions.
            </summary>
        </member>
        <member name="T:Vortice.XInput.CapabilityFlags">
            <summary>
            Describes the features of the controller.
            </summary>
        </member>
        <member name="F:Vortice.XInput.CapabilityFlags.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Vortice.XInput.CapabilityFlags.FfbSupported">
            <summary>
            Device supports force feedback functionality. Note that these force-feedback features beyond rumble are not currently supported through XINPUT on Windows.
            </summary>
        </member>
        <member name="F:Vortice.XInput.CapabilityFlags.Wireless">
            <summary>
            Device is wireless.
            </summary>
        </member>
        <member name="F:Vortice.XInput.CapabilityFlags.VoiceSupported">
            <summary>
            Device has an integrated voice device.
            </summary>
        </member>
        <member name="F:Vortice.XInput.CapabilityFlags.PmdSupported">
            <summary>
            Device supports plug-in modules. Note that plug-in modules like the text input device (TID) are not supported currently through XINPUT on Windows.
            </summary>
        </member>
        <member name="F:Vortice.XInput.CapabilityFlags.NoNavigation">
            <summary>
            Device lacks menu navigation buttons (START, BACK, DPAD).
            </summary>
        </member>
        <member name="T:Vortice.XInput.DeviceSubType">
            <summary>
            Describes Device subtypes available in <see cref="T:Vortice.XInput.Capabilities"/>.
            </summary>
        </member>
        <member name="F:Vortice.XInput.DeviceSubType.Unknown">
            <summary>
            The controller type is unknown.
            </summary>
        </member>
        <member name="F:Vortice.XInput.DeviceSubType.Gamepad">
            <summary>
            Gamepad controller.
            Includes Left and Right Sticks, Left and Right Triggers, Directional Pad, and all standard buttons (A, B, X, Y, START, BACK, LB, RB, LSB, RSB).
            </summary>
        </member>
        <member name="F:Vortice.XInput.DeviceSubType.Wheel">
            <summary>
            Racing wheel controller. 
            Left Stick X reports the wheel rotation, Right Trigger is the acceleration pedal, and Left Trigger is the brake pedal. Includes Directional Pad and most standard buttons (A, B, X, Y, START, BACK, LB, RB). LSB and RSB are optional.
            </summary>
        </member>
        <member name="F:Vortice.XInput.DeviceSubType.ArcadeStick">
            <summary>
            Arcade stick controller.
            Includes a Digital Stick that reports as a DPAD (up, down, left, right), and most standard buttons (A, B, X, Y, START, BACK). The Left and Right Triggers are implemented as digital buttons and report either 0 or 0xFF. LB, LSB, RB, and RSB are optional.
            </summary>
        </member>
        <member name="F:Vortice.XInput.DeviceSubType.FlightStick">
            <summary>
            Flight stick controller. 
            Includes a pitch and roll stick that reports as the Left Stick, a POV Hat which reports as the Right Stick, a rudder (handle twist or rocker) that reports as Left Trigger, and a throttle control as the Right Trigger. Includes support for a primary weapon (A), secondary weapon (B), and other standard buttons (X, Y, START, BACK). LB, LSB, RB, and RSB are optional.
            </summary>
        </member>
        <member name="F:Vortice.XInput.DeviceSubType.DancePad">
            <summary>
            Dance pad controller. 
            Includes the Directional Pad and standard buttons (A, B, X, Y) on the pad, plus BACK and START.
            </summary>
        </member>
        <member name="F:Vortice.XInput.DeviceSubType.Guitar">
            <summary>
            Guitar controller.
            The strum bar maps to DPAD (up and down), and the frets are assigned to A (green), B (red), Y (yellow), X (blue), and LB (orange). Right Stick Y is associated with a vertical orientation sensor; Right Stick X is the whammy bar. Includes support for BACK, START, DPAD (left, right). Left Trigger (pickup selector), Right Trigger, RB, LSB (fret modifier), RSB are optional.
            </summary>
        </member>
        <member name="F:Vortice.XInput.DeviceSubType.GuitarAlternate">
            <summary>
            Guitar controller. 
            Guitar Alt supports a larger range of movement for the vertical orientation sensor.
            </summary>
        </member>
        <member name="F:Vortice.XInput.DeviceSubType.DrumKit">
            <summary>
            Drum controller.
            The drum pads are assigned to buttons: A for green (Floor Tom), B for red (Snare Drum), X for blue (Low Tom), Y for yellow (High Tom), and LB for the pedal (Bass Drum). Includes Directional-Pad, BACK, and START. RB, LSB, and RSB are optional.
            </summary>
        </member>
        <member name="F:Vortice.XInput.DeviceSubType.GuitarBass">
            <summary>
            Guitar controller. 
            Guitar Bass is identical to <see cref="F:Vortice.XInput.DeviceSubType.Guitar"/>, with the distinct subtype to simplify setup.
            </summary>
        </member>
        <member name="F:Vortice.XInput.DeviceSubType.ArcadePad">
            <summary>
            Arcade pad controller. 
            Includes Directional Pad and most standard buttons (A, B, X, Y, START, BACK, LB, RB). The Left and Right Triggers are implemented as digital buttons and report either 0 or 0xFF. Left Stick, Right Stick, LSB, and RSB are optional.
            </summary>
        </member>
        <member name="T:Vortice.XInput.DeviceType">
            <summary>
            Describes Device types available in <see cref="T:Vortice.XInput.Capabilities"/>.
            </summary>
        </member>
        <member name="F:Vortice.XInput.DeviceType.Gamepad">
            <summary>
            The device is a game controller. 
            </summary>
        </member>
        <member name="T:Vortice.XInput.Gamepad">
            <summary>
            Describes the current state of the Xbox 360 Controller.
            </summary>
        </member>
        <member name="F:Vortice.XInput.Gamepad.Buttons">
            <summary>
            Bitmask of the device digital buttons, as follows. 
            A set bit indicates that the corresponding button is pressed. 
            </summary>
        </member>
        <member name="F:Vortice.XInput.Gamepad.LeftTrigger">
            <summary>
            The current value of the left trigger analog control. 
            The value is between 0 and 255.
            </summary>
        </member>
        <member name="F:Vortice.XInput.Gamepad.RightTrigger">
            <summary>
            The current value of the right trigger analog control. 
            The value is between 0 and 255.
            </summary>
        </member>
        <member name="F:Vortice.XInput.Gamepad.LeftThumbX">
            <summary>
            Left thumbstick x-axis value. 
            Each of the thumbstick axis members is a signed value between -32768 and 32767 describing the position of the thumbstick. 
            A value of 0 is centered. 
            Negative values signify down or to the left. 
            Positive values signify up or to the right. 
            The constants <see cref="F:Vortice.XInput.Gamepad.LeftThumbDeadZone" /> or <see cref="F:Vortice.XInput.Gamepad.RightThumbDeadZone" /> can be used as a positive and negative value to filter a thumbstick input. 
            </summary>
        </member>
        <member name="F:Vortice.XInput.Gamepad.LeftThumbY">
            <summary>
            Left thumbstick y-axis value. The value is between -32768 and 32767.
            </summary>
        </member>
        <member name="F:Vortice.XInput.Gamepad.RightThumbX">
            <summary>
            Right thumbstick x-axis value. The value is between -32768 and 32767.
            </summary>
        </member>
        <member name="F:Vortice.XInput.Gamepad.RightThumbY">
            <summary>
            Right thumbstick y-axis value. The value is between -32768 and 32767.
            </summary>
        </member>
        <member name="F:Vortice.XInput.GamepadVirtualKey.A">
            <summary>
            A button
            </summary>
        </member>
        <member name="F:Vortice.XInput.GamepadVirtualKey.B">
            <summary>
            A button
            </summary>
        </member>
        <member name="F:Vortice.XInput.GamepadVirtualKey.X">
            <summary>
            X button
            </summary>
        </member>
        <member name="F:Vortice.XInput.GamepadVirtualKey.Y">
            <summary>
            Y button
            </summary>
        </member>
        <member name="F:Vortice.XInput.GamepadVirtualKey.RightShoulder">
            <summary>
            Right shoulder button 
            </summary>
        </member>
        <member name="F:Vortice.XInput.GamepadVirtualKey.LeftShoulder">
            <summary>
            Left shoulder button 
            </summary>
        </member>
        <member name="F:Vortice.XInput.GamepadVirtualKey.LeftTrigger">
            <summary>
            Left trigger 
            </summary>
        </member>
        <member name="F:Vortice.XInput.GamepadVirtualKey.RightTrigger">
            <summary>
            Right trigger
            </summary>
        </member>
        <member name="F:Vortice.XInput.GamepadVirtualKey.DirectionalPadUp">
            <summary>
            Directional pad up
            </summary>
        </member>
        <member name="F:Vortice.XInput.GamepadVirtualKey.DirectionalPadDown">
            <summary>
            Directional pad down
            </summary>
        </member>
        <member name="F:Vortice.XInput.GamepadVirtualKey.DirectionalPadLeft">
            <summary>
            Directional pad left
            </summary>
        </member>
        <member name="F:Vortice.XInput.GamepadVirtualKey.DirectionalPadRight">
            <summary>
            Directional pad right
            </summary>
        </member>
        <member name="F:Vortice.XInput.GamepadVirtualKey.Start">
            <summary>
            START button.
            </summary>
        </member>
        <member name="F:Vortice.XInput.GamepadVirtualKey.Back">
            <summary>
            BACK button
            </summary>
        </member>
        <member name="F:Vortice.XInput.GamepadVirtualKey.LeftThumbPress">
            <summary>
            Left thumbstick click
            </summary>
        </member>
        <member name="F:Vortice.XInput.GamepadVirtualKey.RightThumbPress">
            <summary>
            Right thumbstick click
            </summary>
        </member>
        <member name="F:Vortice.XInput.GamepadVirtualKey.LeftThumbUp">
            <summary>
            Left thumbstick up
            </summary>
        </member>
        <member name="F:Vortice.XInput.GamepadVirtualKey.LeftThumbDown">
            <summary>
            Left thumbstick down
            </summary>
        </member>
        <member name="F:Vortice.XInput.GamepadVirtualKey.LeftThumbRight">
            <summary>
            Left thumbstick right
            </summary>
        </member>
        <member name="F:Vortice.XInput.GamepadVirtualKey.LeftThumbLeft">
            <summary>
            Left thumbstick left
            </summary>
        </member>
        <member name="F:Vortice.XInput.GamepadVirtualKey.LeftThumbUpLeft">
            <summary>
            Left thumbstick up and left 
            </summary>
        </member>
        <member name="F:Vortice.XInput.GamepadVirtualKey.LeftThumbUpRight">
            <summary>
            Left thumbstick up and right
            </summary>
        </member>
        <member name="F:Vortice.XInput.GamepadVirtualKey.LeftThumbDownRight">
            <summary>
            Left thumbstick down and right.
            </summary>
        </member>
        <member name="F:Vortice.XInput.GamepadVirtualKey.LeftThumbDownLeft">
            <summary>
            Left thumbstick down and left
            </summary>
        </member>
        <member name="F:Vortice.XInput.GamepadVirtualKey.RightThumbUp">
            <summary>
            Right thumbstick up
            </summary>
        </member>
        <member name="F:Vortice.XInput.GamepadVirtualKey.RightThumbDown">
            <summary>
            Right thumbstick down
            </summary>
        </member>
        <member name="F:Vortice.XInput.GamepadVirtualKey.RightThumbRight">
            <summary>
            Right thumbstick right
            </summary>
        </member>
        <member name="F:Vortice.XInput.GamepadVirtualKey.RightThumbLeft">
            <summary>
            Right thumbstick left
            </summary>
        </member>
        <member name="F:Vortice.XInput.GamepadVirtualKey.RightThumbUpLeft">
            <summary>
            Right thumbstick up and left
            </summary>
        </member>
        <member name="F:Vortice.XInput.GamepadVirtualKey.RightThumbUpRight">
            <summary>
            Right thumbstick up and right
            </summary>
        </member>
        <member name="F:Vortice.XInput.GamepadVirtualKey.RightThumbDownRight">
            <summary>
            Right thumbstick down and right
            </summary>
        </member>
        <member name="F:Vortice.XInput.GamepadVirtualKey.RightThumbDownLeft">
            <summary>
            Right thumbstick down and left
            </summary>
        </member>
        <member name="T:Vortice.XInput.Keystroke">
            <summary>
            Specifies keystroke data returned by <strong>XInputGetKeystroke</strong>.
            </summary>
        </member>
        <member name="F:Vortice.XInput.Keystroke.VirtualKey">
            <summary>
            No documentation.
            </summary>
        </member>
        <member name="F:Vortice.XInput.Keystroke.Unicode">
            <summary>
            This member is unused and the value is zero.
            </summary>
        </member>
        <member name="F:Vortice.XInput.Keystroke.Flags">
            <summary>
            Flags that indicate the keyboard state at the time of the input event. 
            </summary>
        </member>
        <member name="F:Vortice.XInput.Keystroke.UserIndex">
            <summary>
            Index of the signed-in gamer associated with the device. Can be a value in the range 0–3.
            </summary>
        </member>
        <member name="F:Vortice.XInput.Keystroke.HidCode">
            <summary>
            HID code corresponding to the input. If there is no corresponding HID code, this value is zero.
            </summary>
        </member>
        <member name="F:Vortice.XInput.KeyStrokeFlags.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:Vortice.XInput.KeyStrokeFlags.KeyDown">
            <summary>
            The key was pressed. 
            </summary>
        </member>
        <member name="F:Vortice.XInput.KeyStrokeFlags.KeyUp">
            <summary>
            The key was released. 
            </summary>
        </member>
        <member name="F:Vortice.XInput.KeyStrokeFlags.Repeat">
            <summary>
            A repeat of a held key. 
            </summary>
        </member>
        <member name="T:Vortice.XInput.State">
            <summary>
            Represents the state of a controller.
            </summary>
            <remarks>
            The <see cref="F:Vortice.XInput.State.PacketNumber"/> member is incremented only if the status of the controller has changed since the controller was last polled.
            </remarks>
        </member>
        <member name="F:Vortice.XInput.State.PacketNumber">
            <summary>
            The packet number indicates whether there have been any changes in the state of the controller.
            If the <see cref="F:Vortice.XInput.State.PacketNumber"/> member is the same in sequentially returned <see cref="T:Vortice.XInput.State"/> structures, the controller state has not changed.
            </summary>
        </member>
        <member name="F:Vortice.XInput.State.Gamepad">
            <summary>
            <dd> <p> <strong><see cref="T:Vortice.XInput.Gamepad" /></strong> structure containing the current state of an Xbox 360 Controller.</p> </dd>
            </summary>
        </member>
        <member name="P:Vortice.XInput.XInput.AllowUnofficialAPI">
            <summary>
            When true, allows the use of the unofficial XInputGetState entry point
            which enables reporting the Guide button status. As this is an unofficial
            API, the default is false. 
            </summary>
        </member>
        <member name="M:Vortice.XInput.XInput.GetState(System.Int32,Vortice.XInput.State@)">
            <summary>
            Retrieves the current state of the specified controller.
            </summary>
            <param name="userIndex">Index of the user's controller. Can be a value from 0 to 3.</param>
            <param name="state">Instance of <see cref="T:Vortice.XInput.State"/> struct.</param>
            <returns>True if success, false if not connected or error.</returns>
        </member>
        <member name="M:Vortice.XInput.XInput.SetVibration(System.Int32,System.Single,System.Single)">
            <summary>
            Sets the gamepad vibration.
            </summary>
            <param name="userIndex">Index of the user's controller. Can be a value from 0 to 3.</param>
            <param name="leftMotor">The level of the left vibration motor. Valid values are between 0.0 and 1.0, where 0.0 signifies no motor use and 1.0 signifies max vibration.</param>
            <param name="rightMotor">The level of the right vibration motor. Valid values are between 0.0 and 1.0, where 0.0 signifies no motor use and 1.0 signifies max vibration.</param>
            <returns>True if succeed, false otherwise.</returns>
        </member>
        <member name="M:Vortice.XInput.XInput.SetVibration(System.Int32,System.UInt16,System.UInt16)">
            <summary>
            Sets the gamepad vibration.
            </summary>
            <param name="userIndex">Index of the user's controller. Can be a value from 0 to 3.</param>
            <param name="leftMotorSpeed">The level of the left vibration motor speed.</param>
            <param name="rightMotorSpeed">The level of the right vibration motor speed.</param>
            <returns>True if succeed, false otherwise.</returns>
        </member>
        <member name="M:Vortice.XInput.XInput.SetVibration(System.Int32,Vortice.XInput.Vibration)">
            <summary>
            Sets the gamepad vibration.
            </summary>
            <param name="userIndex">Index of the user's controller. Can be a value from 0 to 3.</param>
            <param name="vibration">The <see cref="T:Vortice.XInput.Vibration"/> to set.</param>
            <returns>True if succeed, false otherwise.</returns>
        </member>
        <member name="M:Vortice.XInput.XInput.SetReporting(System.Boolean)">
            <summary>
            Sets the reporting.
            </summary>
            <param name="enableReporting">if set to <c>true</c> [enable reporting].</param>
        </member>
        <member name="M:Vortice.XInput.XInput.GetBatteryInformation(System.Int32,Vortice.XInput.BatteryDeviceType)">
            <summary>
            Retrieves the battery type and charge status of a wireless controller.
            </summary>
            <param name="userIndex">Index of the user's controller. Can be a value in the range 0–3. </param>
            <param name="batteryDeviceType">Type of the battery device.</param>
            <returns>Instance of <see cref="T:Vortice.XInput.BatteryInformation"/>.</returns>
        </member>
        <member name="M:Vortice.XInput.XInput.GetBatteryInformation(System.Int32,Vortice.XInput.BatteryDeviceType,Vortice.XInput.BatteryInformation@)">
            <summary>
            Retrieves the battery type and charge status of a wireless controller.
            </summary>
            <param name="userIndex">Index of the user's controller. Can be a value in the range 0–3. </param>
            <param name="batteryDeviceType">Type of the battery device.</param>
            <param name="batteryInformation">The battery information.</param>
            <returns>True if succeed, false otherwise.</returns>
        </member>
        <member name="M:Vortice.XInput.XInput.GetCapabilities(System.Int32,Vortice.XInput.DeviceQueryType,Vortice.XInput.Capabilities@)">
            <summary>
            Retrieves the capabilities and features of a connected controller.
            </summary>
            <param name="userIndex">Index of the user's controller. Can be a value in the range 0–3. </param>
            <param name="deviceQueryType">Type of the device query.</param>
            <param name="capabilities">The capabilities of this controller.</param>
            <returns>True if the controller is connected and succeed, false otherwise.</returns>
        </member>
        <member name="M:Vortice.XInput.XInput.GetKeystroke(System.Int32,Vortice.XInput.Keystroke@)">
            <summary>
            Retrieves a gamepad input event.
            </summary>
            <param name="userIndex">Index of the user's controller. Can be a value in the range 0–3. </param>
            <param name="keystroke">The keystroke.</param>
            <returns>False if the controller is not connected and no new keys have been pressed, true otherwise.</returns>
        </member>
        <member name="T:Vortice.XInput.XInputVersion">
            <summary>
            Describes the library version.
            </summary>
        </member>
        <member name="F:Vortice.XInput.XInputVersion.Version14">
            <summary>
            XInput 1.4 ships as part of Windows 8. Use this version for building Windows Store apps or if your desktop app requires Windows 8.
            </summary>
        </member>
        <member name="F:Vortice.XInput.XInputVersion.Version910">
            <summary>
            XInput 9.1.0 ships as part of Windows Vista, Windows 7, and Windows 8. Use this version if your desktop app is intended to run on these versions of Windows and you are using basic XInput functionality.
            </summary>
        </member>
        <member name="F:Vortice.XInput.XInputVersion.Version13">
            <summary>
            XInput 1.3 ships as a redistributable component in the DirectX SDK with support for Windows Vista, Windows 7, and Windows 8. Use this version if your desktop app is intended to run on these versions of Windows and you need functionality that is not supported by XInput 9.1.0.
            </summary>
        </member>
    </members>
</doc>
